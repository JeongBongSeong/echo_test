/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'pmd'
    id 'checkstyle'
    //id 'org.springframework.boot' version '2.0.8.RELEASE'
    //id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}
//group ='echoClient'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application.
    mainClassName = 'echoClient.EchoClient'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'echoClient.EchoClient'
        )
    }
}

pmd {
    toolVersion = '5.4.1'
    ignoreFailures = true
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

checkstyle {
    toolVersion = 7.1
    config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
}

// 혹은
/*
task Pmd (type: pmd) {
    ignoreFailures = true
    ruleSetFiles = rootProject.files("/path/to/pmd.xml")
  */ // exclude "package/to/querydsl/**/Q*.java" // excludes ...
 /*
    reports {
        xml.enabled true
        html.enabled false
    }
}*//*
task checkstyle(type: Checkstyle) { 
    showViolations true
    ignoreFailures true
    configFile file(rootDir.path + "/checkstyle.xml")
    */
//    source 'src/main/java'
//    include '**/*.java'
//    exclude '**/gen/**'
//    exclude '**/R.java'
//    exclude '**/BuildConfig.java'
//    classpath = files()
//}
/*
pmdMain {
    reports {
         xml.destination = file("${pmd.reportsDir}/pmd.xml")
         html.enabled = false
         xml.enabled = true
    }
}*/
